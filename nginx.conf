events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream backend {
        server backend:5000;
    }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # HTTP server block (localhost development)
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # This location block catches all /api/* requests
        location /api/ {
            proxy_pass http://backend/;  # Note the trailing slash - this strips /api
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle client-side routing (SPA)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Cache HTML files for a shorter time
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Don't cache service worker
        location = /sw.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }

    # HTTPS server block (commented out for localhost development)
    # Uncomment and configure when moving to production domain
    #
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    #
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers off;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    #
    #     # Security headers
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #
    #     # Handle client-side routing (SPA)
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    #
    #     # Cache static assets
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    #
    #     # Cache HTML files for a shorter time
    #     location ~* \.html$ {
    #         expires 1h;
    #         add_header Cache-Control "public";
    #     }
    #
    #     # Don't cache service worker
    #     location = /sw.js {
    #         expires off;
    #         add_header Cache-Control "no-cache, no-store, must-revalidate";
    #     }
    #
    #     # Let's Encrypt challenge location
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/letsencrypt;
    #     }
    # }
    #
    # # Redirect HTTP to HTTPS (uncomment for production)
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name your-domain.com;
    #
    #     # Let's Encrypt challenge location
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/letsencrypt;
    #     }
    #
    #     # Redirect all other traffic to HTTPS
    #     location / {
    #         return 301 https://$server_name$request_uri;
    #     }
    # }
}